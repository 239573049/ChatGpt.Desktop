{"version":3,"file":"input.js","sources":["../../../BlazorComponent.Web/src/events/EventType.ts","../../../BlazorComponent.Web/src/utils/helper.ts","../../../BlazorComponent.Web/src/events/extra.ts","../../../BlazorComponent.Web/src/input.ts"],"sourcesContent":["// see https://github.com/dotnet/aspnetcore/blob/main/src/Components/Web.JS/src/Rendering/Events/EventTypes.ts\r\n// updated at 2022/08/31\r\n\r\nexport function parseMouseEvent(event: MouseEvent): Blazor.MouseEventArgs {\r\n  return {\r\n    detail: event.detail,\r\n    screenX: event.screenX,\r\n    screenY: event.screenY,\r\n    clientX: event.clientX,\r\n    clientY: event.clientY,\r\n    offsetX: event.offsetX,\r\n    offsetY: event.offsetY,\r\n    pageX: event.pageX,\r\n    pageY: event.pageY,\r\n    button: event.button,\r\n    buttons: event.buttons,\r\n    ctrlKey: event.ctrlKey,\r\n    shiftKey: event.shiftKey,\r\n    altKey: event.altKey,\r\n    metaKey: event.metaKey,\r\n    type: event.type,\r\n  } as Blazor.MouseEventArgs;\r\n}\r\n\r\nexport function parseTouchEvent(event: TouchEvent): Blazor.TouchEventArgs {\r\n  return {\r\n    detail: event.detail,\r\n    touches: parseTouch(event.touches),\r\n    targetTouches: parseTouch(event.targetTouches),\r\n    changedTouches: parseTouch(event.changedTouches),\r\n    ctrlKey: event.ctrlKey,\r\n    shiftKey: event.shiftKey,\r\n    altKey: event.altKey,\r\n    metaKey: event.metaKey,\r\n    type: event.type,\r\n  };\r\n}\r\n\r\nfunction parseTouch(touchList: TouchList): Blazor.TouchPoint[] {\r\n  const touches: Blazor.TouchPoint[] = [];\r\n\r\n  for (let i = 0; i < touchList.length; i++) {\r\n    const touch = touchList[i];\r\n    touches.push({\r\n      identifier: touch.identifier,\r\n      clientX: touch.clientX,\r\n      clientY: touch.clientY,\r\n      screenX: touch.screenX,\r\n      screenY: touch.screenY,\r\n      pageX: touch.pageX,\r\n      pageY: touch.pageY,\r\n    });\r\n  }\r\n  return touches;\r\n}\r\n\r\nexport function parseChangeEvent(event: Event): Blazor.ChangeEventArgs {\r\n  const element = event.target as Element;\r\n  if (isTimeBasedInput(element)) {\r\n    const normalizedValue = normalizeTimeBasedValue(element);\r\n    return { value: normalizedValue };\r\n  } else if (isMultipleSelectInput(element)) {\r\n    const selectElement = element as HTMLSelectElement;\r\n    const selectedValues = Array.from(selectElement.options)\r\n      .filter((option) => option.selected)\r\n      .map((option) => option.value);\r\n    return { value: selectedValues };\r\n  } else {\r\n    const targetIsCheckbox = isCheckbox(element);\r\n    const newValue = targetIsCheckbox ? !!element[\"checked\"] : element[\"value\"];\r\n    return { value: newValue };\r\n  }\r\n}\r\n\r\nfunction isTimeBasedInput(element: Element): element is HTMLInputElement {\r\n  return timeBasedInputs.indexOf(element.getAttribute(\"type\")!) !== -1;\r\n}\r\n\r\nconst timeBasedInputs = [\"date\", \"datetime-local\", \"month\", \"time\", \"week\"];\r\n\r\nfunction normalizeTimeBasedValue(element: HTMLInputElement): string {\r\n  const value = element.value;\r\n  const type = element.type;\r\n  switch (type) {\r\n    case \"date\":\r\n    case \"month\":\r\n      return value;\r\n    case \"datetime-local\":\r\n      return value.length === 16 ? value + \":00\" : value; // Convert yyyy-MM-ddTHH:mm to yyyy-MM-ddTHH:mm:00\r\n    case \"time\":\r\n      return value.length === 5 ? value + \":00\" : value; // Convert hh:mm to hh:mm:00\r\n    case \"week\":\r\n      // For now we are not going to normalize input type week as it is not trivial\r\n      return value;\r\n  }\r\n\r\n  throw new Error(`Invalid element type '${type}'.`);\r\n}\r\n\r\nfunction isMultipleSelectInput(element: Element): element is HTMLSelectElement {\r\n  return (\r\n    element instanceof HTMLSelectElement && element.type === \"select-multiple\"\r\n  );\r\n}\r\n\r\nfunction isCheckbox(element: Element | null): boolean {\r\n  return (\r\n    !!element &&\r\n    element.tagName === \"INPUT\" &&\r\n    element.getAttribute(\"type\") === \"checkbox\"\r\n  );\r\n}\r\n","export function addOnceEventListener (\r\n  el: EventTarget,\r\n  eventName: string,\r\n  cb: (event: Event) => void,\r\n  options: boolean | AddEventListenerOptions = false\r\n): void {\r\n  const once = (event: Event) => {\r\n    cb(event)\r\n    el.removeEventListener(eventName, once, options)\r\n  }\r\n\r\n  el.addEventListener(eventName, once, options)\r\n}\r\n\r\nlet passiveSupported = false\r\ntry {\r\n  if (typeof window !== 'undefined') {\r\n    const testListenerOpts = Object.defineProperty({}, 'passive', {\r\n      get: () => {\r\n        passiveSupported = true\r\n      },\r\n    })\r\n\r\n    window.addEventListener('testListener' as any, testListenerOpts as any, testListenerOpts)\r\n    window.removeEventListener('testListener' as any, testListenerOpts as any, testListenerOpts)\r\n  }\r\n} catch (e) { console.warn(e) } /* eslint-disable-line no-console */\r\nexport { passiveSupported }\r\n\r\nexport function addPassiveEventListener (\r\n  el: EventTarget,\r\n  event: string,\r\n  cb: ((e: any) => void),\r\n  options: {}\r\n): void {\r\n  el.addEventListener(event, cb, passiveSupported ? options : false)\r\n}\r\n\r\nexport function getZIndex (el?: Element | null): number {\r\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\r\n\r\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index')\r\n\r\n  if (!index) return getZIndex(el.parentNode as Element)\r\n  return index\r\n}\r\n\r\n// KeyboardEvent.keyCode aliases\r\nexport const keyCodes = Object.freeze({\r\n  enter: 13,\r\n  tab: 9,\r\n  delete: 46,\r\n  esc: 27,\r\n  space: 32,\r\n  up: 38,\r\n  down: 40,\r\n  left: 37,\r\n  right: 39,\r\n  end: 35,\r\n  home: 36,\r\n  del: 46,\r\n  backspace: 8,\r\n  insert: 45,\r\n  pageup: 33,\r\n  pagedown: 34,\r\n  shift: 16,\r\n})\r\n\r\n/**  Polyfill for Event.prototype.composedPath */\r\nexport function composedPath (e: Event): EventTarget[] {\r\n  if (e.composedPath) return e.composedPath()\r\n\r\n  const path = []\r\n  let el = e.target as Element\r\n\r\n  while (el) {\r\n    path.push(el)\r\n\r\n    if (el.tagName === 'HTML') {\r\n      path.push(document)\r\n      path.push(window)\r\n\r\n      return path\r\n    }\r\n\r\n    el = el.parentElement!\r\n  }\r\n  return path\r\n}\r\n\r\nexport function getBlazorId(el) {\r\n  let _bl_ = el.getAttributeNames().find(a => a.startsWith('_bl_'))\r\n  if (_bl_) {\r\n    _bl_ = _bl_.substring(4);\r\n  }\r\n\r\n  return _bl_;\r\n}\r\n\r\nexport function getElementSelector(el) {\r\n  if (!(el instanceof Element))\r\n    return;\r\n  var path = [];\r\n  while (el.nodeType === Node.ELEMENT_NODE) {\r\n    var selector = el.nodeName.toLowerCase();\r\n    if (el.id) {\r\n      selector += '#' + el.id;\r\n      path.unshift(selector);\r\n      break;\r\n    } else {\r\n      var sib = el, nth = 1;\r\n      while (sib = sib.previousElementSibling) {\r\n        if (sib.nodeName.toLowerCase() == selector)\r\n          nth++;\r\n      }\r\n      if (nth != 1)\r\n        selector += \":nth-of-type(\" + nth + \")\";\r\n    }\r\n    path.unshift(selector);\r\n    el = el.parentNode;\r\n  }\r\n  return path.join(\" > \");\r\n}\r\n\r\nexport function getDom(elOrString: Element | string | undefined) {\r\n  let element: HTMLElement;\r\n  if (!elOrString) {\r\n    element = document.body;\r\n  } else if (typeof elOrString === \"string\") {\r\n    if (elOrString === \"document\") {\r\n      element = document.documentElement;\r\n    } else if (elOrString.indexOf(\"__.__\") > 0) {\r\n      // for example: el__.__parentElement\r\n      let array = elOrString.split(\"__.__\");\r\n      let i = 0;\r\n      let el = document.querySelector(array[i++]);\r\n\r\n      if (el) {\r\n        while (array[i]) {\r\n          el = el[array[i]];\r\n          i++;\r\n        }\r\n      }\r\n\r\n      if (el instanceof HTMLElement) {\r\n        element = el;\r\n      }\r\n    } else {\r\n      element = document.querySelector(elOrString);\r\n    }\r\n  } else {\r\n    element = elOrString as HTMLElement;\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nexport const canUseDom = !!(\r\n  typeof window !== 'undefined' &&\r\n  typeof document !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n)\r\n","import { getElementSelector } from \"../utils/helper\";\r\nimport { parseMouseEvent, parseTouchEvent } from \"./EventType\";\r\n\r\nexport function registerExtraMouseEvent(eventType: string, eventName: string) {\r\n  if (Blazor) {\r\n    Blazor.registerCustomEventType(eventType, {\r\n      browserEventName: eventName,\r\n      createEventArgs: e => createSharedEventArgs(\"mouse\", e)\r\n    })\r\n  }\r\n}\r\n\r\nexport function registerExtraTouchEvent(eventType: string, eventName: string) {\r\n  if (Blazor) {\r\n    Blazor.registerCustomEventType(eventType, {\r\n      browserEventName: eventName,\r\n      createEventArgs: e => createSharedEventArgs(\"touch\", e)\r\n    })\r\n  }\r\n}\r\n\r\nexport function createSharedEventArgs(type: \"mouse\" | \"touch\", e: Event,) {\r\n  let args = { target: {} }\r\n  if (type === 'mouse') {\r\n    args = {\r\n      ...args,\r\n      ...parseMouseEvent(e as MouseEvent)\r\n    }\r\n  } else if (type === 'touch') {\r\n    args = {\r\n      ...args,\r\n      ...parseTouchEvent(e as TouchEvent)\r\n    }\r\n  }\r\n\r\n  if (e.target) {\r\n    const target = e.target as HTMLElement;\r\n    const elementReferenceId = target.getAttributeNames().find(a => a.startsWith('_bl_'));\r\n    if (elementReferenceId) {\r\n      args.target['elementReferenceId'] = elementReferenceId\r\n      args.target['selector'] = `[${elementReferenceId}]`\r\n    } else {\r\n      args.target['selector'] = getElementSelector(target)\r\n    }\r\n\r\n    args.target['class'] = target.getAttribute('class')\r\n  }\r\n\r\n  return args;\r\n}","import { parseChangeEvent } from \"./events/EventType\";\r\nimport { createSharedEventArgs } from \"./events/extra\";\r\n\r\nfunction registerInputEvents(\r\n  inputElement: Element,\r\n  inputSlotElement: Element,\r\n  dotNetHelper: DotNet.DotNetObject,\r\n  debounce: number\r\n) {\r\n  if (!inputElement || !inputSlotElement) return;\r\n\r\n  registerClickEvent(inputSlotElement, dotNetHelper);\r\n\r\n  registerMouseUpEvent(inputSlotElement, dotNetHelper);\r\n\r\n  if (\r\n    !(\r\n      inputElement &&\r\n      (inputElement instanceof HTMLInputElement ||\r\n        inputElement instanceof HTMLTextAreaElement)\r\n    )\r\n  )\r\n    return;\r\n\r\n  registerInputEvent(inputElement, dotNetHelper, debounce);\r\n}\r\n\r\nfunction registerInputEvent(\r\n  inputElement: HTMLInputElement | HTMLTextAreaElement,\r\n  dotNetHelper: DotNet.DotNetObject,\r\n  debounce: number\r\n) {\r\n  let compositionInputting = false;\r\n\r\n  let timeout;\r\n\r\n  inputElement.addEventListener(\"compositionstart\", (_) => {\r\n    compositionInputting = true;\r\n  });\r\n\r\n  inputElement.addEventListener(\"compositionend\", (event: CompositionEvent) => {\r\n    compositionInputting = false;\r\n\r\n    const changeEventArgs = parseChangeEvent(event);\r\n    changeEventArgs.value = inputElement.value;\r\n\r\n    if (\r\n      inputElement.maxLength !== -1 &&\r\n      changeEventArgs.value.length > inputElement.maxLength\r\n    ) {\r\n      changeEventArgs.value = changeEventArgs.value.substring(\r\n        0,\r\n        inputElement.maxLength\r\n      );\r\n    }\r\n\r\n    dotNetHelper.invokeMethodAsync(\"OnInput\", changeEventArgs);\r\n  });\r\n\r\n  inputElement.addEventListener(\"input\", (event: InputEvent) => {\r\n    if (compositionInputting) return;\r\n\r\n    var changeEventArgs = parseChangeEvent(event);\r\n\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => {\r\n      dotNetHelper.invokeMethodAsync(\"OnInput\", changeEventArgs);\r\n    }, debounce);\r\n  });\r\n}\r\n\r\nfunction setValue(element: HTMLInputElement, value: any) {\r\n  if (!element) return;\r\n  element.value = value;\r\n}\r\n\r\nfunction registerClickEvent(\r\n  inputSlot: Element,\r\n  dotNetHelper: DotNet.DotNetObject\r\n) {\r\n  inputSlot.addEventListener(\"click\", (e) => {\r\n    if (checkIfStopPropagation(e, \"click\")) {\r\n      return;\r\n    }\r\n\r\n    var eventArgs = createSharedEventArgs(\"mouse\", e);\r\n    dotNetHelper.invokeMethodAsync(\"OnClick\", eventArgs);\r\n  });\r\n}\r\n\r\nfunction registerMouseUpEvent(\r\n  inputSlot: Element,\r\n  dotNetHelper: DotNet.DotNetObject\r\n) {\r\n  inputSlot.addEventListener(\"mouseup\", (e) => {\r\n    if (checkIfStopPropagation(e, \"mouseup\")) {\r\n      return;\r\n    }\r\n\r\n    var eventArgs = createSharedEventArgs(\"mouse\", e);\r\n    dotNetHelper.invokeMethodAsync(\"OnMouseUp\", eventArgs);\r\n  });\r\n}\r\n\r\n// @event:stopPropagation only works in Blazor,\r\n// so need to capture it manually.\r\nfunction checkIfStopPropagation(event: Event, eventName: string) {\r\n  const z = [\"_blazorEvents_1\", \"stopPropagationFlags\", eventName];\r\n  let isFlag = event.composedPath()[0];\r\n  let i = 0;\r\n  while (isFlag[z[i]]) {\r\n    isFlag = isFlag[z[i]];\r\n    i++;\r\n  }\r\n\r\n  return i == z.length && typeof isFlag === \"boolean\" && isFlag;\r\n}\r\n\r\nexport { registerInputEvents, setValue };\r\n"],"names":["parseTouch","touchList","touches","i","length","touch","push","identifier","clientX","clientY","screenX","screenY","pageX","pageY","parseChangeEvent","event","element","target","timeBasedInputs","indexOf","getAttribute","isTimeBasedInput","normalizedValue","value","type","Error","normalizeTimeBasedValue","HTMLSelectElement","isMultipleSelectInput","selectElement","Array","from","options","filter","option","selected","map","targetIsCheckbox","tagName","isCheckbox","passiveSupported","window","testListenerOpts","Object","defineProperty","get","addEventListener","removeEventListener","e","console","warn","createSharedEventArgs","args","assign","detail","offsetX","offsetY","button","buttons","ctrlKey","shiftKey","altKey","metaKey","targetTouches","changedTouches","parseTouchEvent","elementReferenceId","getAttributeNames","find","a","startsWith","el","Element","path","nodeType","Node","ELEMENT_NODE","selector","nodeName","toLowerCase","id","unshift","sib","nth","previousElementSibling","parentNode","join","getElementSelector","registerInputEvents","inputElement","inputSlotElement","dotNetHelper","debounce","inputSlot","checkIfStopPropagation","eventArgs","invokeMethodAsync","registerClickEvent","registerMouseUpEvent","HTMLInputElement","HTMLTextAreaElement","timeout","compositionInputting","_","changeEventArgs","maxLength","substring","clearTimeout","setTimeout","registerInputEvent","setValue","eventName","z","isFlag","composedPath","freeze","enter","tab","delete","esc","space","up","down","left","right","end","home","del","backspace","insert","pageup","pagedown","shift"],"mappings":"AAsCA,SAASA,EAAWC,GAClB,MAAMC,EAA+B,GAErC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAAK,CACzC,MAAME,EAAQJ,EAAUE,GACxBD,EAAQI,KAAK,CACXC,WAAYF,EAAME,WAClBC,QAASH,EAAMG,QACfC,QAASJ,EAAMI,QACfC,QAASL,EAAMK,QACfC,QAASN,EAAMM,QACfC,MAAOP,EAAMO,MACbC,MAAOR,EAAMQ,OAEhB,CACD,OAAOX,CACT,CAEM,SAAUY,EAAiBC,GAC/B,MAAMC,EAAUD,EAAME,OACtB,GAgBF,SAA0BD,GACxB,OAAmE,IAA5DE,EAAgBC,QAAQH,EAAQI,aAAa,QACtD,CAlBMC,CAAiBL,GAAU,CAC7B,MAAMM,EAqBV,SAAiCN,GAC/B,MAAMO,EAAQP,EAAQO,MAChBC,EAAOR,EAAQQ,KACrB,OAAQA,GACN,IAAK,OACL,IAAK,QAML,IAAK,OAEH,OAAOD,EANT,IAAK,iBACH,OAAwB,KAAjBA,EAAMnB,OAAgBmB,EAAQ,MAAQA,EAC/C,IAAK,OACH,OAAwB,IAAjBA,EAAMnB,OAAemB,EAAQ,MAAQA,EAMhD,MAAM,IAAIE,MAAM,yBAAyBD,MAC3C,CAtC4BE,CAAwBV,GAChD,MAAO,CAAEO,MAAOD,EACjB,CAAM,GAsCT,SAA+BN,GAC7B,OACEA,aAAmBW,mBAAsC,oBAAjBX,EAAQQ,IAEpD,CA1CaI,CAAsBZ,GAAU,CACzC,MAAMa,EAAgBb,EAItB,MAAO,CAAEO,MAHcO,MAAMC,KAAKF,EAAcG,SAC7CC,QAAQC,GAAWA,EAAOC,WAC1BC,KAAKF,GAAWA,EAAOX,QAE3B,CAAM,CACL,MAAMc,EAqCV,SAAoBrB,GAClB,QACIA,GACkB,UAApBA,EAAQsB,SACyB,aAAjCtB,EAAQI,aAAa,OAEzB,CA3C6BmB,CAAWvB,GAEpC,MAAO,CAAEO,MADQc,IAAqBrB,EAAiB,QAAIA,EAAe,MAE3E,CACH,CAMA,MAAME,EAAkB,CAAC,OAAQ,iBAAkB,QAAS,OAAQ,QChEpE,IAAIsB,GAAmB,EACvB,IACE,GAAsB,oBAAXC,OAAwB,CACjC,MAAMC,EAAmBC,OAAOC,eAAe,CAAA,EAAI,UAAW,CAC5DC,IAAK,KACHL,GAAmB,CAAI,IAI3BC,OAAOK,iBAAiB,eAAuBJ,EAAyBA,GACxED,OAAOM,oBAAoB,eAAuBL,EAAyBA,EAC5E,CAC4B,CAA7B,MAAOM,GAAKC,QAAQC,KAAKF,EAAI,CCLf,SAAAG,EAAsB3B,EAAyBwB,GAC7D,IAAII,EAAO,CAAEnC,OAAQ,CAAA,GFnBjB,IAA0BF,EEgC9B,GAZa,UAATS,EACF4B,EAAIT,OAAAU,OAAAV,OAAAU,OAAA,GACCD,GFrBA,CACLE,QAF4BvC,EEuBPiC,GFrBPM,OACd5C,QAASK,EAAML,QACfC,QAASI,EAAMJ,QACfH,QAASO,EAAMP,QACfC,QAASM,EAAMN,QACf8C,QAASxC,EAAMwC,QACfC,QAASzC,EAAMyC,QACf5C,MAAOG,EAAMH,MACbC,MAAOE,EAAMF,MACb4C,OAAQ1C,EAAM0C,OACdC,QAAS3C,EAAM2C,QACfC,QAAS5C,EAAM4C,QACfC,SAAU7C,EAAM6C,SAChBC,OAAQ9C,EAAM8C,OACdC,QAAS/C,EAAM+C,QACftC,KAAMT,EAAMS,OEQM,UAATA,IACT4B,EAAIT,OAAAU,OAAAV,OAAAU,OAAA,GACCD,GFNH,SAA0BrC,GAC9B,MAAO,CACLuC,OAAQvC,EAAMuC,OACdpD,QAASF,EAAWe,EAAMb,SAC1B6D,cAAe/D,EAAWe,EAAMgD,eAChCC,eAAgBhE,EAAWe,EAAMiD,gBACjCL,QAAS5C,EAAM4C,QACfC,SAAU7C,EAAM6C,SAChBC,OAAQ9C,EAAM8C,OACdC,QAAS/C,EAAM+C,QACftC,KAAMT,EAAMS,KAEhB,CELSyC,CAAgBjB,KAInBA,EAAE/B,OAAQ,CACZ,MAAMA,EAAS+B,EAAE/B,OACXiD,EAAqBjD,EAAOkD,oBAAoBC,MAAKC,GAAKA,EAAEC,WAAW,UACzEJ,GACFd,EAAKnC,OAA2B,mBAAIiD,EACpCd,EAAKnC,OAAiB,SAAI,IAAIiD,MAE9Bd,EAAKnC,OAAiB,SDyDtB,SAA6BsD,GACjC,GAAMA,aAAcC,QAApB,CAGA,IADA,IAAIC,EAAO,GACJF,EAAGG,WAAaC,KAAKC,cAAc,CACxC,IAAIC,EAAWN,EAAGO,SAASC,cAC3B,GAAIR,EAAGS,GAAI,CACTH,GAAY,IAAMN,EAAGS,GACrBP,EAAKQ,QAAQJ,GACb,KACD,CAEC,IADA,IAAIK,EAAMX,EAAIY,EAAM,EACbD,EAAMA,EAAIE,wBACXF,EAAIJ,SAASC,eAAiBF,GAChCM,IAEO,GAAPA,IACFN,GAAY,gBAAkBM,EAAM,KAExCV,EAAKQ,QAAQJ,GACbN,EAAKA,EAAGc,UACT,CACD,OAAOZ,EAAKa,KAAK,MApBR,CAqBX,CChFgCC,CAAmBtE,GAG/CmC,EAAKnC,OAAc,MAAIA,EAAOG,aAAa,QAC5C,CAED,OAAOgC,CACT,CC9CA,SAASoC,EACPC,EACAC,EACAC,EACAC,GAEKH,GAAiBC,IAmExB,SACEG,EACAF,GAEAE,EAAU/C,iBAAiB,SAAUE,IACnC,IAAI8C,EAAuB9C,EAAG,SAA9B,CAIA,IAAI+C,EAAY5C,EAAsB,QAASH,GAC/C2C,EAAaK,kBAAkB,UAAWD,EAHzC,CAGmD,GAExD,CA7EEE,CAAmBP,EAAkBC,GA+EvC,SACEE,EACAF,GAEAE,EAAU/C,iBAAiB,WAAYE,IACrC,IAAI8C,EAAuB9C,EAAG,WAA9B,CAIA,IAAI+C,EAAY5C,EAAsB,QAASH,GAC/C2C,EAAaK,kBAAkB,YAAaD,EAH3C,CAGqD,GAE1D,CAzFEG,CAAqBR,EAAkBC,GAInCF,IACCA,aAAwBU,kBACvBV,aAAwBW,sBAQhC,SACEX,EACAE,EACAC,GAEA,IAEIS,EAFAC,GAAuB,EAI3Bb,EAAa3C,iBAAiB,oBAAqByD,IACjDD,GAAuB,CAAI,IAG7Bb,EAAa3C,iBAAiB,kBAAmB/B,IAC/CuF,GAAuB,EAEvB,MAAME,EAAkB1F,EAAiBC,GACzCyF,EAAgBjF,MAAQkE,EAAalE,OAGP,IAA5BkE,EAAagB,WACbD,EAAgBjF,MAAMnB,OAASqF,EAAagB,YAE5CD,EAAgBjF,MAAQiF,EAAgBjF,MAAMmF,UAC5C,EACAjB,EAAagB,YAIjBd,EAAaK,kBAAkB,UAAWQ,EAAgB,IAG5Df,EAAa3C,iBAAiB,SAAU/B,IACtC,IAAIuF,EAAJ,CAEA,IAAIE,EAAkB1F,EAAiBC,GAEvC4F,aAAaN,GACbA,EAAUO,YAAW,KACnBjB,EAAaK,kBAAkB,UAAWQ,EAAgB,GACzDZ,EAP8B,CAOrB,GAEhB,CA7CEiB,CAAmBpB,EAAcE,EAAcC,GACjD,CA8CA,SAASkB,EAAS9F,EAA2BO,GACtCP,IACLA,EAAQO,MAAQA,EAClB,CAgCA,SAASuE,EAAuB/E,EAAcgG,GAC5C,MAAMC,EAAI,CAAC,kBAAmB,uBAAwBD,GACtD,IAAIE,EAASlG,EAAMmG,eAAe,GAC9B/G,EAAI,EACR,KAAO8G,EAAOD,EAAE7G,KACd8G,EAASA,EAAOD,EAAE7G,IAClBA,IAGF,OAAOA,GAAK6G,EAAE5G,QAA4B,kBAAX6G,GAAwBA,CACzD,CFpEwBtE,OAAOwE,OAAO,CACpCC,MAAO,GACPC,IAAK,EACLC,OAAQ,GACRC,IAAK,GACLC,MAAO,GACPC,GAAI,GACJC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,IAAK,GACLC,UAAW,EACXC,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,MAAO"}